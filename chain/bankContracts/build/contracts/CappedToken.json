{
  "contractName": "CappedToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_cap",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260038054600160a01b60ff021916905534801561002057600080fd5b50604051602080610b0a8339810180604052602081101561004057600080fd5b5051600380546001600160a01b031916331790558061005e57600080fd5b600455610a9a806100706000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb1461024e578063d73dd6231461027a578063dd62ed3e146102a6578063f2fde38b146102d4576100f5565b806370a08231146101f2578063715018a6146102185780637d64bcb4146102225780638da5cb5b1461022a576100f5565b806323b872dd116100d357806323b872dd1461015c578063355274ea1461019257806340c10f191461019a57806366188463146101c6576100f5565b806305d2035b146100fa578063095ea7b31461011657806318160ddd14610142575b600080fd5b6101026102fa565b604080519115158252519081900360200190f35b6101026004803603604081101561012c57600080fd5b506001600160a01b03813516906020013561030a565b61014a610370565b60408051918252519081900360200190f35b6101026004803603606081101561017257600080fd5b506001600160a01b03813581169160208101359091169060400135610376565b61014a6104e9565b610102600480360360408110156101b057600080fd5b506001600160a01b0381351690602001356104ef565b610102600480360360408110156101dc57600080fd5b506001600160a01b038135169060200135610525565b61014a6004803603602081101561020857600080fd5b50356001600160a01b0316610614565b61022061062f565b005b610102610690565b610232610714565b604080516001600160a01b039092168252519081900360200190f35b6101026004803603604081101561026457600080fd5b506001600160a01b038135169060200135610723565b6101026004803603604081101561029057600080fd5b506001600160a01b038135169060200135610800565b61014a600480360360408110156102bc57600080fd5b506001600160a01b0381358116916020013516610899565b610220600480360360208110156102ea57600080fd5b50356001600160a01b03166108c4565b600354600160a01b900460ff1681565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6001600160a01b03831660009081526020819052604081205482111561039b57600080fd5b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156103cb57600080fd5b6001600160a01b0383166103de57600080fd5b6001600160a01b038416600090815260208190526040902054610407908363ffffffff6108e716565b6001600160a01b03808616600090815260208190526040808220939093559085168152205461043c908363ffffffff6108f916565b6001600160a01b0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461047e908363ffffffff6108e716565b6001600160a01b03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60045481565b6000600454610509836001546108f990919063ffffffff16565b111561051457600080fd5b61051e838361090c565b9392505050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054808310610579573360009081526002602090815260408083206001600160a01b03881684529091528120556105ae565b610589818463ffffffff6108e716565b3360009081526002602090815260408083206001600160a01b03891684529091529020555b3360008181526002602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6001600160a01b031660009081526020819052604090205490565b6003546001600160a01b0316331461064657600080fd5b6003546040516001600160a01b03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380546001600160a01b0319169055565b6003546000906001600160a01b031633146106aa57600080fd5b600354600160a01b900460ff16156106c157600080fd5b6003805474ff00000000000000000000000000000000000000001916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6003546001600160a01b031681565b3360009081526020819052604081205482111561073f57600080fd5b6001600160a01b03831661075257600080fd5b33600090815260208190526040902054610772908363ffffffff6108e716565b33600090815260208190526040808220929092556001600160a01b038516815220546107a4908363ffffffff6108f916565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054610834908363ffffffff6108f916565b3360008181526002602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6003546001600160a01b031633146108db57600080fd5b6108e4816109ff565b50565b6000828211156108f357fe5b50900390565b8181018281101561090657fe5b92915050565b600354600090600160a01b900460ff161561092657600080fd5b600154610939908363ffffffff6108f916565b6001556001600160a01b038316600090815260208190526040902054610965908363ffffffff6108f916565b6001600160a01b03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a26040805183815290516001600160a01b038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6001600160a01b038116610a1257600080fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a72305820973c3ea91d2c9ad1a24e34b92b69d8167ef6cbeca125913a93d7c9c6bb6590ea0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb1461024e578063d73dd6231461027a578063dd62ed3e146102a6578063f2fde38b146102d4576100f5565b806370a08231146101f2578063715018a6146102185780637d64bcb4146102225780638da5cb5b1461022a576100f5565b806323b872dd116100d357806323b872dd1461015c578063355274ea1461019257806340c10f191461019a57806366188463146101c6576100f5565b806305d2035b146100fa578063095ea7b31461011657806318160ddd14610142575b600080fd5b6101026102fa565b604080519115158252519081900360200190f35b6101026004803603604081101561012c57600080fd5b506001600160a01b03813516906020013561030a565b61014a610370565b60408051918252519081900360200190f35b6101026004803603606081101561017257600080fd5b506001600160a01b03813581169160208101359091169060400135610376565b61014a6104e9565b610102600480360360408110156101b057600080fd5b506001600160a01b0381351690602001356104ef565b610102600480360360408110156101dc57600080fd5b506001600160a01b038135169060200135610525565b61014a6004803603602081101561020857600080fd5b50356001600160a01b0316610614565b61022061062f565b005b610102610690565b610232610714565b604080516001600160a01b039092168252519081900360200190f35b6101026004803603604081101561026457600080fd5b506001600160a01b038135169060200135610723565b6101026004803603604081101561029057600080fd5b506001600160a01b038135169060200135610800565b61014a600480360360408110156102bc57600080fd5b506001600160a01b0381358116916020013516610899565b610220600480360360208110156102ea57600080fd5b50356001600160a01b03166108c4565b600354600160a01b900460ff1681565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6001600160a01b03831660009081526020819052604081205482111561039b57600080fd5b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156103cb57600080fd5b6001600160a01b0383166103de57600080fd5b6001600160a01b038416600090815260208190526040902054610407908363ffffffff6108e716565b6001600160a01b03808616600090815260208190526040808220939093559085168152205461043c908363ffffffff6108f916565b6001600160a01b0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461047e908363ffffffff6108e716565b6001600160a01b03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60045481565b6000600454610509836001546108f990919063ffffffff16565b111561051457600080fd5b61051e838361090c565b9392505050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054808310610579573360009081526002602090815260408083206001600160a01b03881684529091528120556105ae565b610589818463ffffffff6108e716565b3360009081526002602090815260408083206001600160a01b03891684529091529020555b3360008181526002602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6001600160a01b031660009081526020819052604090205490565b6003546001600160a01b0316331461064657600080fd5b6003546040516001600160a01b03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380546001600160a01b0319169055565b6003546000906001600160a01b031633146106aa57600080fd5b600354600160a01b900460ff16156106c157600080fd5b6003805474ff00000000000000000000000000000000000000001916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6003546001600160a01b031681565b3360009081526020819052604081205482111561073f57600080fd5b6001600160a01b03831661075257600080fd5b33600090815260208190526040902054610772908363ffffffff6108e716565b33600090815260208190526040808220929092556001600160a01b038516815220546107a4908363ffffffff6108f916565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054610834908363ffffffff6108f916565b3360008181526002602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6003546001600160a01b031633146108db57600080fd5b6108e4816109ff565b50565b6000828211156108f357fe5b50900390565b8181018281101561090657fe5b92915050565b600354600090600160a01b900460ff161561092657600080fd5b600154610939908363ffffffff6108f916565b6001556001600160a01b038316600090815260208190526040902054610965908363ffffffff6108f916565b6001600160a01b03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a26040805183815290516001600160a01b038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6001600160a01b038116610a1257600080fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a72305820973c3ea91d2c9ad1a24e34b92b69d8167ef6cbeca125913a93d7c9c6bb6590ea0029",
  "sourceMap": "151:560:13:-;;;470:35:48;;;-1:-1:-1;;;;;;470:35:48;;;217:77:13;5:2:-1;;;;30:1;27;20:12;5:2;217:77:13;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;217:77:13;565:5:57;:18;;-1:-1:-1;;;;;;565:18:57;573:10;565:18;;;264:8:13;256:17;;;;;;279:3;:10;151:560;;;;;;",
  "deployedSourceMap": "151:560:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;151:560:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:35:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;1857:188:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1857:188:49;;;;;;;;:::i;418:83:43:-;;;:::i;:::-;;;;;;;;;;;;;;;;769:470:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;769:470:49;;;;;;;;;;;;;;;;;:::i;194:18:13:-;;;:::i;530:178::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;530:178:13;;;;;;;;:::i;3722:432:49:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3722:432:49;;;;;;;;:::i;1178:99:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1178:99:43;-1:-1:-1;;;;;1178:99:43;;:::i;999:111:57:-;;;:::i;:::-;;1213:140:48;;;:::i;236:20:57:-;;;:::i;:::-;;;;-1:-1:-1;;;;;236:20:57;;;;;;;;;;;;;;655:321:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;655:321:43;;;;;;;;:::i;2969:296:49:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2969:296:49;;;;;;;;:::i;2364:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2364:153:49;;;;;;;;;;:::i;1272:103:57:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1272:103:57;-1:-1:-1;;;;;1272:103:57;;:::i;470:35:48:-;;;-1:-1:-1;;;470:35:48;;;;;:::o;1857:188:49:-;1944:10;1924:4;1936:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1936:29:49;;;;;;;;;;;:38;;;1985;;;;;;;1924:4;;1936:29;;1944:10;;1985:38;;;;;;;;-1:-1:-1;2036:4:49;1857:188;;;;:::o;418:83:43:-;484:12;;418:83;:::o;769:470:49:-;-1:-1:-1;;;;;907:15:49;;875:4;907:15;;;;;;;;;;;897:25;;;889:34;;;;;;-1:-1:-1;;;;;947:14:49;;;;;;:7;:14;;;;;;;;962:10;947:26;;;;;;;;937:36;;;929:45;;;;;;-1:-1:-1;;;;;988:17:49;;980:26;;;;;;-1:-1:-1;;;;;1031:15:49;;:8;:15;;;;;;;;;;;:27;;1051:6;1031:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1013:15:49;;;:8;:15;;;;;;;;;;;:45;;;;1080:13;;;;;;;:25;;1098:6;1080:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1064:13:49;;;:8;:13;;;;;;;;;;;:41;;;;1140:14;;;;;:7;:14;;;;;1155:10;1140:26;;;;;;;:38;;1171:6;1140:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1111:14:49;;;;;;;:7;:14;;;;;;;;1126:10;1111:26;;;;;;;;:67;;;;1189:28;;;;;;;;;;;1111:14;;1189:28;;;;;;;;;;;-1:-1:-1;1230:4:49;769:470;;;;;:::o;194:18:13:-;;;;:::o;530:178::-;610:4;661:3;;632:25;649:7;632:12;;:16;;:25;;;;:::i;:::-;:32;;624:41;;;;;;679:24;690:3;695:7;679:10;:24::i;:::-;672:31;530:178;-1:-1:-1;;;530:178:13:o;3722:432:49:-;3869:10;3828:4;3861:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3861:29:49;;;;;;;;;;3900:28;;;3896:165;;3946:10;3970:1;3938:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3938:29:49;;;;;;;;;:33;3896:165;;;4024:30;:8;4037:16;4024:30;:12;:30;:::i;:::-;4000:10;3992:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3992:29:49;;;;;;;;;:62;3896:165;4080:10;4102:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4071:61:49;;4102:29;;;;;;;;;;;4071:61;;;;;;;;;4080:10;4071:61;;;;;;;;;;;-1:-1:-1;4145:4:49;;3722:432;-1:-1:-1;;;3722:432:49:o;1178:99:43:-;-1:-1:-1;;;;;1256:16:43;1234:7;1256:16;;;;;;;;;;;;1178:99::o;999:111:57:-;717:5;;-1:-1:-1;;;;;717:5:57;703:10;:19;695:28;;;;;;1075:5;;1056:25;;-1:-1:-1;;;;;1075:5:57;;;;1056:25;;1075:5;;1056:25;1087:5;:18;;-1:-1:-1;;;;;;1087:18:57;;;999:111::o;1213:140:48:-;717:5:57;;1272:4:48;;-1:-1:-1;;;;;717:5:57;703:10;:19;695:28;;;;;;545:15:48;;-1:-1:-1;;;545:15:48;;;;544:16;536:25;;;;;;1284:15;:22;;-1:-1:-1;;1284:22:48;-1:-1:-1;;;1284:22:48;;;1317:14;;;;1284:22;;1317:14;-1:-1:-1;1344:4:48;1213:140;:::o;236:20:57:-;;;-1:-1:-1;;;;;236:20:57;;:::o;655:321:43:-;757:10;718:4;748:20;;;;;;;;;;;738:30;;;730:39;;;;;;-1:-1:-1;;;;;783:17:43;;775:26;;;;;;840:10;831:8;:20;;;;;;;;;;;:32;;856:6;831:32;:24;:32;:::i;:::-;817:10;808:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;885:13:43;;;;;;:25;;903:6;885:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;869:13:43;;:8;:13;;;;;;;;;;;;:41;;;;921:33;;;;;;;869:13;;930:10;;921:33;;;;;;;;;;-1:-1:-1;967:4:43;655:321;;;;:::o;2969:296:49:-;3132:10;3070:4;3124:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3124:29:49;;;;;;;;;;:46;;3158:11;3124:46;:33;:46;:::i;:::-;3092:10;3084:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3084:29:49;;;;;;;;;;;;:87;;;3182:61;;;;;;3084:29;;3182:61;;;;;;;;;;;-1:-1:-1;3256:4:49;2969:296;;;;:::o;2364:153::-;-1:-1:-1;;;;;2487:15:49;;;2463:7;2487:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2364:153::o;1272:103:57:-;717:5;;-1:-1:-1;;;;;717:5:57;703:10;:19;695:28;;;;;;1341:29;1360:9;1341:18;:29::i;:::-;1272:103;:::o;1058:116:53:-;1118:7;1146:2;1140;:8;;1133:16;;;;-1:-1:-1;1162:7:53;;;1058:116::o;1236:128::-;1317:7;;;1337;;;;1330:15;;;;1236:128;;;;:::o;809:290:48:-;545:15;;901:4;;-1:-1:-1;;;545:15:48;;;;544:16;536:25;;;;;;930:12;;:25;;947:7;930:25;:16;:25;:::i;:::-;915:12;:40;-1:-1:-1;;;;;977:13:48;;:8;:13;;;;;;;;;;;:26;;995:7;977:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;961:13:48;;:8;:13;;;;;;;;;;;;:42;;;;1014:18;;;;;;;961:13;;1014:18;;;;;;;;;1043:34;;;;;;;;-1:-1:-1;;;;;1043:34:48;;;1060:1;;1043:34;;;;;;;;;-1:-1:-1;1090:4:48;809:290;;;;:::o;1510:171:57:-;-1:-1:-1;;;;;1580:23:57;;1572:32;;;;;;1636:5;;1615:38;;-1:-1:-1;;;;;1615:38:57;;;;1636:5;;1615:38;;1636:5;;1615:38;1659:5;:17;;-1:-1:-1;;;;;;1659:17:57;-1:-1:-1;;;;;1659:17:57;;;;;;;;;;1510:171::o",
  "source": "pragma solidity 0.5.7;\n\nimport \"contracts/zeppelin/ERC20/MintableToken.sol\";\n\n\n/**\n * @title Capped token\n * @dev Mintable token with a token cap.\n */\ncontract CappedToken is MintableToken {\n\n  uint256 public cap;\n\n  constructor(uint256 _cap) public {\n    require(_cap > 0);\n    cap = _cap;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(\n    address _to,\n    uint256 _amount\n  )\n    public\n    returns (bool)\n  {\n    require(totalSupply_.add(_amount) <= cap);\n\n    return super.mint(_to, _amount);\n  }\n\n}\n",
  "sourcePath": "/home/stefan/Work/RobInTheHood/chain/bankContracts/contracts/zeppelin/ERC20/CappedToken.sol",
  "ast": {
    "absolutePath": "/home/stefan/Work/RobInTheHood/chain/bankContracts/contracts/zeppelin/ERC20/CappedToken.sol",
    "exportedSymbols": {
      "CappedToken": [
        1867
      ]
    },
    "id": 1868,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1820,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:13"
      },
      {
        "absolutePath": "contracts/zeppelin/ERC20/MintableToken.sol",
        "file": "contracts/zeppelin/ERC20/MintableToken.sol",
        "id": 1821,
        "nodeType": "ImportDirective",
        "scope": 1868,
        "sourceUnit": 6309,
        "src": "24:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1822,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6308,
              "src": "175:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$6308",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1823,
            "nodeType": "InheritanceSpecifier",
            "src": "175:13:13"
          }
        ],
        "contractDependencies": [
          5974,
          6017,
          6049,
          6308,
          6555,
          7456
        ],
        "contractKind": "contract",
        "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
        "fullyImplemented": true,
        "id": 1867,
        "linearizedBaseContracts": [
          1867,
          6308,
          7456,
          6555,
          5974,
          6017,
          6049
        ],
        "name": "CappedToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1825,
            "name": "cap",
            "nodeType": "VariableDeclaration",
            "scope": 1867,
            "src": "194:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1824,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "250:44:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1831,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1827,
                          "src": "264:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "271:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "264:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7474,
                        7475
                      ],
                      "referencedDeclaration": 7474,
                      "src": "256:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "256:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "256:17:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1836,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "279:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1837,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "285:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "279:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "279:10:13"
                }
              ]
            },
            "documentation": null,
            "id": 1841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1827,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1841,
                  "src": "229:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:14:13"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:13"
            },
            "scope": 1867,
            "src": "217:77:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1865,
              "nodeType": "Block",
              "src": "618:90:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1853,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1845,
                              "src": "649:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1851,
                              "name": "totalSupply_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5893,
                              "src": "632:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6928,
                            "src": "632:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1855,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1825,
                          "src": "661:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "632:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7474,
                        7475
                      ],
                      "referencedDeclaration": 7474,
                      "src": "624:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "624:41:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1861,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1843,
                        "src": "690:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1862,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "695:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "679:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CappedToken_$1867",
                          "typeString": "contract super CappedToken"
                        }
                      },
                      "id": 1860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6288,
                      "src": "679:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1849,
                  "id": 1864,
                  "nodeType": "Return",
                  "src": "672:31:13"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param _to The address that will receive the minted tokens.\n@param _amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1843,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "549:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "566:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "543:42:13"
            },
            "returnParameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "610:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:6:13"
            },
            "scope": 1867,
            "src": "530:178:13",
            "stateMutability": "nonpayable",
            "superFunction": 6288,
            "visibility": "public"
          }
        ],
        "scope": 1868,
        "src": "151:560:13"
      }
    ],
    "src": "0:712:13"
  },
  "legacyAST": {
    "absolutePath": "/home/stefan/Work/RobInTheHood/chain/bankContracts/contracts/zeppelin/ERC20/CappedToken.sol",
    "exportedSymbols": {
      "CappedToken": [
        1867
      ]
    },
    "id": 1868,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1820,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:13"
      },
      {
        "absolutePath": "contracts/zeppelin/ERC20/MintableToken.sol",
        "file": "contracts/zeppelin/ERC20/MintableToken.sol",
        "id": 1821,
        "nodeType": "ImportDirective",
        "scope": 1868,
        "sourceUnit": 6309,
        "src": "24:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1822,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6308,
              "src": "175:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$6308",
                "typeString": "contract MintableToken"
              }
            },
            "id": 1823,
            "nodeType": "InheritanceSpecifier",
            "src": "175:13:13"
          }
        ],
        "contractDependencies": [
          5974,
          6017,
          6049,
          6308,
          6555,
          7456
        ],
        "contractKind": "contract",
        "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
        "fullyImplemented": true,
        "id": 1867,
        "linearizedBaseContracts": [
          1867,
          6308,
          7456,
          6555,
          5974,
          6017,
          6049
        ],
        "name": "CappedToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1825,
            "name": "cap",
            "nodeType": "VariableDeclaration",
            "scope": 1867,
            "src": "194:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1824,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "250:44:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1831,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1827,
                          "src": "264:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "271:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "264:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7474,
                        7475
                      ],
                      "referencedDeclaration": 7474,
                      "src": "256:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "256:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "256:17:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1836,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "279:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1837,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "285:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "279:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "279:10:13"
                }
              ]
            },
            "documentation": null,
            "id": 1841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1827,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1841,
                  "src": "229:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:14:13"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:13"
            },
            "scope": 1867,
            "src": "217:77:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1865,
              "nodeType": "Block",
              "src": "618:90:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1853,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1845,
                              "src": "649:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1851,
                              "name": "totalSupply_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5893,
                              "src": "632:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6928,
                            "src": "632:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1855,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1825,
                          "src": "661:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "632:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7474,
                        7475
                      ],
                      "referencedDeclaration": 7474,
                      "src": "624:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "624:41:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1861,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1843,
                        "src": "690:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1862,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "695:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "679:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CappedToken_$1867",
                          "typeString": "contract super CappedToken"
                        }
                      },
                      "id": 1860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6288,
                      "src": "679:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1849,
                  "id": 1864,
                  "nodeType": "Return",
                  "src": "672:31:13"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param _to The address that will receive the minted tokens.\n@param _amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1843,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "549:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "566:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "543:42:13"
            },
            "returnParameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "610:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:6:13"
            },
            "scope": 1867,
            "src": "530:178:13",
            "stateMutability": "nonpayable",
            "superFunction": 6288,
            "visibility": "public"
          }
        ],
        "scope": 1868,
        "src": "151:560:13"
      }
    ],
    "src": "0:712:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-04-20T08:31:01.325Z",
  "devdoc": {
    "details": "Mintable token with a token cap.",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens.",
        "return": "True if the operation was successful."
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will receive the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Capped token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}