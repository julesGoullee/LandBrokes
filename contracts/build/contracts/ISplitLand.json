{
  "contractName": "ISplitLand",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506106f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a9059cbb1461018c578063d73dd623146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063661884631461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f2610278565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a0381358116916020810135909116906040013561027e565b6100d66004803603604081101561015057600080fd5b50600160a060020a0381351690602001356103f3565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a03166104e2565b6100d6600480360360408110156101a257600080fd5b50600160a060020a0381351690602001356104fd565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a0381351690602001356105dc565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a0381358116916020013516610675565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a0383166000908152602081905260408120548211156102a357600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156102d357600080fd5b600160a060020a03831615156102e857600080fd5b600160a060020a038416600090815260208190526040902054610311908363ffffffff6106a016565b600160a060020a038086166000908152602081905260408082209390935590851681522054610346908363ffffffff6106b216565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610388908363ffffffff6106a016565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061044757336000908152600260209081526040808320600160a060020a038816845290915281205561047c565b610457818463ffffffff6106a016565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b3360009081526020819052604081205482111561051957600080fd5b600160a060020a038316151561052e57600080fd5b3360009081526020819052604090205461054e908363ffffffff6106a016565b3360009081526020819052604080822092909255600160a060020a03851681522054610580908363ffffffff6106b216565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610610908363ffffffff6106b216565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106ac57fe5b50900390565b818101828110156106bf57fe5b9291505056fea165627a7a72305820daeb19408bdcb9a97ab384cca81155c6bbe9f11993c36d2f66eb227f3ff197f70029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a9059cbb1461018c578063d73dd623146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063661884631461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f2610278565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a0381358116916020810135909116906040013561027e565b6100d66004803603604081101561015057600080fd5b50600160a060020a0381351690602001356103f3565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a03166104e2565b6100d6600480360360408110156101a257600080fd5b50600160a060020a0381351690602001356104fd565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a0381351690602001356105dc565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a0381358116916020013516610675565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a0383166000908152602081905260408120548211156102a357600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156102d357600080fd5b600160a060020a03831615156102e857600080fd5b600160a060020a038416600090815260208190526040902054610311908363ffffffff6106a016565b600160a060020a038086166000908152602081905260408082209390935590851681522054610346908363ffffffff6106b216565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610388908363ffffffff6106a016565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061044757336000908152600260209081526040808320600160a060020a038816845290915281205561047c565b610457818463ffffffff6106a016565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b3360009081526020819052604081205482111561051957600080fd5b600160a060020a038316151561052e57600080fd5b3360009081526020819052604090205461054e908363ffffffff6106a016565b3360009081526020819052604080822092909255600160a060020a03851681522054610580908363ffffffff6106b216565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610610908363ffffffff6106b216565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106ac57fe5b50900390565b818101828110156106bf57fe5b9291505056fea165627a7a72305820daeb19408bdcb9a97ab384cca81155c6bbe9f11993c36d2f66eb227f3ff197f70029",
  "sourceMap": "78:453:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;78:453:3;;;;;;;",
  "deployedSourceMap": "78:453:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;78:453:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:188:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1858:188:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;418:83:29;;;:::i;:::-;;;;;;;;;;;;;;;;770:470:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;770:470:34;;;;;;;;;;;;;;;;;:::i;3723:432::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3723:432:34;;;;;;;;:::i;1178:99:29:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1178:99:29;-1:-1:-1;;;;;1178:99:29;;:::i;655:321::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;655:321:29;;;;;;;;:::i;2970:296:34:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2970:296:34;;;;;;;;:::i;2365:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2365:153:34;;;;;;;;;;:::i;1858:188::-;1945:10;1925:4;1937:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1937:29:34;;;;;;;;;;;:38;;;1986;;;;;;;1925:4;;1937:29;;1945:10;;1986:38;;;;;;;;-1:-1:-1;2037:4:34;1858:188;;;;:::o;418:83:29:-;484:12;;418:83;:::o;770:470:34:-;-1:-1:-1;;;;;908:15:34;;876:4;908:15;;;;;;;;;;;898:25;;;890:34;;;;;;-1:-1:-1;;;;;948:14:34;;;;;;:7;:14;;;;;;;;963:10;948:26;;;;;;;;938:36;;;930:45;;;;;;-1:-1:-1;;;;;989:17:34;;;;981:26;;;;;;-1:-1:-1;;;;;1032:15:34;;:8;:15;;;;;;;;;;;:27;;1052:6;1032:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1014:15:34;;;:8;:15;;;;;;;;;;;:45;;;;1081:13;;;;;;;:25;;1099:6;1081:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1065:13:34;;;:8;:13;;;;;;;;;;;:41;;;;1141:14;;;;;:7;:14;;;;;1156:10;1141:26;;;;;;;:38;;1172:6;1141:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1112:14:34;;;;;;;:7;:14;;;;;;;;1127:10;1112:26;;;;;;;;:67;;;;1190:28;;;;;;;;;;;1112:14;;1190:28;;;;;;;;;;;-1:-1:-1;1231:4:34;770:470;;;;;:::o;3723:432::-;3870:10;3829:4;3862:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3862:29:34;;;;;;;;;;3901:28;;;3897:165;;3947:10;3971:1;3939:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3939:29:34;;;;;;;;;:33;3897:165;;;4025:30;:8;4038:16;4025:30;:12;:30;:::i;:::-;4001:10;3993:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3993:29:34;;;;;;;;;:62;3897:165;4081:10;4103:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4072:61:34;;4103:29;;;;;;;;;;;4072:61;;;;;;;;;4081:10;4072:61;;;;;;;;;;;-1:-1:-1;4146:4:34;;3723:432;-1:-1:-1;;;3723:432:34:o;1178:99:29:-;-1:-1:-1;;;;;1256:16:29;1234:7;1256:16;;;;;;;;;;;;1178:99::o;655:321::-;757:10;718:4;748:20;;;;;;;;;;;738:30;;;730:39;;;;;;-1:-1:-1;;;;;783:17:29;;;;775:26;;;;;;840:10;831:8;:20;;;;;;;;;;;:32;;856:6;831:32;:24;:32;:::i;:::-;817:10;808:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;885:13:29;;;;;;:25;;903:6;885:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;869:13:29;;:8;:13;;;;;;;;;;;;:41;;;;921:33;;;;;;;869:13;;930:10;;921:33;;;;;;;;;;-1:-1:-1;967:4:29;655:321;;;;:::o;2970:296:34:-;3133:10;3071:4;3125:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3125:29:34;;;;;;;;;;:46;;3159:11;3125:46;:33;:46;:::i;:::-;3093:10;3085:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3085:29:34;;;;;;;;;;;;:87;;;3183:61;;;;;;3085:29;;3183:61;;;;;;;;;;;-1:-1:-1;3257:4:34;2970:296;;;;:::o;2365:153::-;-1:-1:-1;;;;;2488:15:34;;;2464:7;2488:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2365:153::o;1058:116:41:-;1118:7;1140:8;;;;1133:16;;;;-1:-1:-1;1162:7:41;;;1058:116::o;1236:128::-;1317:7;;;1337;;;;1330:15;;;;1236:128;;;;:::o",
  "source": "pragma solidity 0.5.3;\n\nimport \"contracts/zeppelin/ERC20/StandardToken.sol\";\n\ncontract ISplitLand is StandardToken {\n\n  /**\n  *  When a new SplitLand contract is created, in the constructor,\n  *  we specify the variables below. In the constructor we also pass\n  *  the total supply (which in our Bank contract is max 10K).\n  *\n  *  We make sure we also pass an array of addresses and the amount of\n  *  split land each address will receive.\n  **/\n\n  string name;\n  uint8 decimals;\n  string symbol;\n\n  uint256 decentralandLandId;\n\n}\n",
  "sourcePath": "/home/stefan/Work/RobInTheHood/contracts/contracts/interfaces/ISplitLand.sol",
  "ast": {
    "absolutePath": "/home/stefan/Work/RobInTheHood/contracts/contracts/interfaces/ISplitLand.sol",
    "exportedSymbols": {
      "ISplitLand": [
        515
      ]
    },
    "id": 516,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 503,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "contracts/zeppelin/ERC20/StandardToken.sol",
        "file": "contracts/zeppelin/ERC20/StandardToken.sol",
        "id": 504,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 4394,
        "src": "24:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 505,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4393,
              "src": "101:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$4393",
                "typeString": "contract StandardToken"
              }
            },
            "id": 506,
            "nodeType": "InheritanceSpecifier",
            "src": "101:13:3"
          }
        ],
        "contractDependencies": [
          3909,
          3952,
          3984,
          4393
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 515,
        "linearizedBaseContracts": [
          515,
          4393,
          3909,
          3952,
          3984
        ],
        "name": "ISplitLand",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 508,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "450:11:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 507,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "450:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 510,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "465:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 509,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "465:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 512,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "483:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 511,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "483:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 514,
            "name": "decentralandLandId",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "501:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 513,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "501:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 516,
        "src": "78:453:3"
      }
    ],
    "src": "0:532:3"
  },
  "legacyAST": {
    "absolutePath": "/home/stefan/Work/RobInTheHood/contracts/contracts/interfaces/ISplitLand.sol",
    "exportedSymbols": {
      "ISplitLand": [
        515
      ]
    },
    "id": 516,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 503,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "contracts/zeppelin/ERC20/StandardToken.sol",
        "file": "contracts/zeppelin/ERC20/StandardToken.sol",
        "id": 504,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 4394,
        "src": "24:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 505,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4393,
              "src": "101:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$4393",
                "typeString": "contract StandardToken"
              }
            },
            "id": 506,
            "nodeType": "InheritanceSpecifier",
            "src": "101:13:3"
          }
        ],
        "contractDependencies": [
          3909,
          3952,
          3984,
          4393
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 515,
        "linearizedBaseContracts": [
          515,
          4393,
          3909,
          3952,
          3984
        ],
        "name": "ISplitLand",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 508,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "450:11:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 507,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "450:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 510,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "465:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 509,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "465:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 512,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "483:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 511,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "483:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 514,
            "name": "decentralandLandId",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "501:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 513,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "501:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 516,
        "src": "78:453:3"
      }
    ],
    "src": "0:532:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-04-16T17:38:38.764Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}